// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// fc_estbth_2SLS_TS
arma::vec fc_estbth_2SLS_TS(int Me, int Mpi, arma::vec tauseq, int N, int T, int q, int p, arma::vec y0, arma::mat Z, arma::mat X, arma::mat W1, arma::mat W2, arma::mat secA1, arma::mat secA2, arma::vec rhoest_hc, arma::cube Best_hc, arma::mat phiest_hc, arma::mat etaest_hc, arma::mat thetaest_hc, double rho_ini);
RcppExport SEXP _QuantileDSPM_fc_estbth_2SLS_TS(SEXP MeSEXP, SEXP MpiSEXP, SEXP tauseqSEXP, SEXP NSEXP, SEXP TSEXP, SEXP qSEXP, SEXP pSEXP, SEXP y0SEXP, SEXP ZSEXP, SEXP XSEXP, SEXP W1SEXP, SEXP W2SEXP, SEXP secA1SEXP, SEXP secA2SEXP, SEXP rhoest_hcSEXP, SEXP Best_hcSEXP, SEXP phiest_hcSEXP, SEXP etaest_hcSEXP, SEXP thetaest_hcSEXP, SEXP rho_iniSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type Me(MeSEXP);
    Rcpp::traits::input_parameter< int >::type Mpi(MpiSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type tauseq(tauseqSEXP);
    Rcpp::traits::input_parameter< int >::type N(NSEXP);
    Rcpp::traits::input_parameter< int >::type T(TSEXP);
    Rcpp::traits::input_parameter< int >::type q(qSEXP);
    Rcpp::traits::input_parameter< int >::type p(pSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type y0(y0SEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Z(ZSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type W1(W1SEXP);
    Rcpp::traits::input_parameter< arma::mat >::type W2(W2SEXP);
    Rcpp::traits::input_parameter< arma::mat >::type secA1(secA1SEXP);
    Rcpp::traits::input_parameter< arma::mat >::type secA2(secA2SEXP);
    Rcpp::traits::input_parameter< arma::vec >::type rhoest_hc(rhoest_hcSEXP);
    Rcpp::traits::input_parameter< arma::cube >::type Best_hc(Best_hcSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type phiest_hc(phiest_hcSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type etaest_hc(etaest_hcSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type thetaest_hc(thetaest_hcSEXP);
    Rcpp::traits::input_parameter< double >::type rho_ini(rho_iniSEXP);
    rcpp_result_gen = Rcpp::wrap(fc_estbth_2SLS_TS(Me, Mpi, tauseq, N, T, q, p, y0, Z, X, W1, W2, secA1, secA2, rhoest_hc, Best_hc, phiest_hc, etaest_hc, thetaest_hc, rho_ini));
    return rcpp_result_gen;
END_RCPP
}
// fc_estBnum_2SLS_TS
arma::mat fc_estBnum_2SLS_TS(int Bnum, int dimALL, int Me, int Mpi, arma::vec tauseq, int N, int T, int q, int p, arma::vec y0, arma::mat Z, arma::mat X, arma::mat W1, arma::mat W2, arma::mat secA1, arma::mat secA2, arma::vec rhoest_hc, arma::cube Best_hc, arma::mat phiest_hc, arma::mat etaest_hc, arma::mat thetaest_hc, double rho_ini);
RcppExport SEXP _QuantileDSPM_fc_estBnum_2SLS_TS(SEXP BnumSEXP, SEXP dimALLSEXP, SEXP MeSEXP, SEXP MpiSEXP, SEXP tauseqSEXP, SEXP NSEXP, SEXP TSEXP, SEXP qSEXP, SEXP pSEXP, SEXP y0SEXP, SEXP ZSEXP, SEXP XSEXP, SEXP W1SEXP, SEXP W2SEXP, SEXP secA1SEXP, SEXP secA2SEXP, SEXP rhoest_hcSEXP, SEXP Best_hcSEXP, SEXP phiest_hcSEXP, SEXP etaest_hcSEXP, SEXP thetaest_hcSEXP, SEXP rho_iniSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type Bnum(BnumSEXP);
    Rcpp::traits::input_parameter< int >::type dimALL(dimALLSEXP);
    Rcpp::traits::input_parameter< int >::type Me(MeSEXP);
    Rcpp::traits::input_parameter< int >::type Mpi(MpiSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type tauseq(tauseqSEXP);
    Rcpp::traits::input_parameter< int >::type N(NSEXP);
    Rcpp::traits::input_parameter< int >::type T(TSEXP);
    Rcpp::traits::input_parameter< int >::type q(qSEXP);
    Rcpp::traits::input_parameter< int >::type p(pSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type y0(y0SEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Z(ZSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type W1(W1SEXP);
    Rcpp::traits::input_parameter< arma::mat >::type W2(W2SEXP);
    Rcpp::traits::input_parameter< arma::mat >::type secA1(secA1SEXP);
    Rcpp::traits::input_parameter< arma::mat >::type secA2(secA2SEXP);
    Rcpp::traits::input_parameter< arma::vec >::type rhoest_hc(rhoest_hcSEXP);
    Rcpp::traits::input_parameter< arma::cube >::type Best_hc(Best_hcSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type phiest_hc(phiest_hcSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type etaest_hc(etaest_hcSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type thetaest_hc(thetaest_hcSEXP);
    Rcpp::traits::input_parameter< double >::type rho_ini(rho_iniSEXP);
    rcpp_result_gen = Rcpp::wrap(fc_estBnum_2SLS_TS(Bnum, dimALL, Me, Mpi, tauseq, N, T, q, p, y0, Z, X, W1, W2, secA1, secA2, rhoest_hc, Best_hc, phiest_hc, etaest_hc, thetaest_hc, rho_ini));
    return rcpp_result_gen;
END_RCPP
}
// fc_asmat
arma::mat fc_asmat(arma::vec vec1, int nrow, int ncol);
RcppExport SEXP _QuantileDSPM_fc_asmat(SEXP vec1SEXP, SEXP nrowSEXP, SEXP ncolSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type vec1(vec1SEXP);
    Rcpp::traits::input_parameter< int >::type nrow(nrowSEXP);
    Rcpp::traits::input_parameter< int >::type ncol(ncolSEXP);
    rcpp_result_gen = Rcpp::wrap(fc_asmat(vec1, nrow, ncol));
    return rcpp_result_gen;
END_RCPP
}
// fc_asvec
arma::vec fc_asvec(arma::mat mat1);
RcppExport SEXP _QuantileDSPM_fc_asvec(SEXP mat1SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type mat1(mat1SEXP);
    rcpp_result_gen = Rcpp::wrap(fc_asvec(mat1));
    return rcpp_result_gen;
END_RCPP
}
// fc_iota
arma::mat fc_iota(int n);
RcppExport SEXP _QuantileDSPM_fc_iota(SEXP nSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    rcpp_result_gen = Rcpp::wrap(fc_iota(n));
    return rcpp_result_gen;
END_RCPP
}
// fc_I
arma::mat fc_I(int n);
RcppExport SEXP _QuantileDSPM_fc_I(SEXP nSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    rcpp_result_gen = Rcpp::wrap(fc_I(n));
    return rcpp_result_gen;
END_RCPP
}
// fc_B
arma::mat fc_B(double rho, int N, arma::mat W2);
RcppExport SEXP _QuantileDSPM_fc_B(SEXP rhoSEXP, SEXP NSEXP, SEXP W2SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type rho(rhoSEXP);
    Rcpp::traits::input_parameter< int >::type N(NSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type W2(W2SEXP);
    rcpp_result_gen = Rcpp::wrap(fc_B(rho, N, W2));
    return rcpp_result_gen;
END_RCPP
}
// fc_MatrixMultip
arma::mat fc_MatrixMultip(arma::mat M1, arma::mat M2);
RcppExport SEXP _QuantileDSPM_fc_MatrixMultip(SEXP M1SEXP, SEXP M2SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type M1(M1SEXP);
    Rcpp::traits::input_parameter< arma::mat >::type M2(M2SEXP);
    rcpp_result_gen = Rcpp::wrap(fc_MatrixMultip(M1, M2));
    return rcpp_result_gen;
END_RCPP
}
// fc_phitilde_2SLS
arma::vec fc_phitilde_2SLS(arma::vec wrD, arma::mat wrH, arma::mat wrH_pred);
RcppExport SEXP _QuantileDSPM_fc_phitilde_2SLS(SEXP wrDSEXP, SEXP wrHSEXP, SEXP wrH_predSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type wrD(wrDSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type wrH(wrHSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type wrH_pred(wrH_predSEXP);
    rcpp_result_gen = Rcpp::wrap(fc_phitilde_2SLS(wrD, wrH, wrH_pred));
    return rcpp_result_gen;
END_RCPP
}
// fc_etaest
arma::vec fc_etaest(arma::vec phiest, arma::vec Y, arma::mat Zbreve);
RcppExport SEXP _QuantileDSPM_fc_etaest(SEXP phiestSEXP, SEXP YSEXP, SEXP ZbreveSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type phiest(phiestSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type Y(YSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Zbreve(ZbreveSEXP);
    rcpp_result_gen = Rcpp::wrap(fc_etaest(phiest, Y, Zbreve));
    return rcpp_result_gen;
END_RCPP
}
// fc_Vtilde
arma::vec fc_Vtilde(arma::vec etatilde, int N, int T);
RcppExport SEXP _QuantileDSPM_fc_Vtilde(SEXP etatildeSEXP, SEXP NSEXP, SEXP TSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type etatilde(etatildeSEXP);
    Rcpp::traits::input_parameter< int >::type N(NSEXP);
    Rcpp::traits::input_parameter< int >::type T(TSEXP);
    rcpp_result_gen = Rcpp::wrap(fc_Vtilde(etatilde, N, T));
    return rcpp_result_gen;
END_RCPP
}
// fc_secA1
arma::mat fc_secA1(arma::mat W2, int N);
RcppExport SEXP _QuantileDSPM_fc_secA1(SEXP W2SEXP, SEXP NSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type W2(W2SEXP);
    Rcpp::traits::input_parameter< int >::type N(NSEXP);
    rcpp_result_gen = Rcpp::wrap(fc_secA1(W2, N));
    return rcpp_result_gen;
END_RCPP
}
// fc_Lambda1lambda1
arma::mat fc_Lambda1lambda1(arma::vec Vtilde, int N, int T, arma::mat W2, arma::mat secA1, arma::mat secA2);
RcppExport SEXP _QuantileDSPM_fc_Lambda1lambda1(SEXP VtildeSEXP, SEXP NSEXP, SEXP TSEXP, SEXP W2SEXP, SEXP secA1SEXP, SEXP secA2SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type Vtilde(VtildeSEXP);
    Rcpp::traits::input_parameter< int >::type N(NSEXP);
    Rcpp::traits::input_parameter< int >::type T(TSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type W2(W2SEXP);
    Rcpp::traits::input_parameter< arma::mat >::type secA1(secA1SEXP);
    Rcpp::traits::input_parameter< arma::mat >::type secA2(secA2SEXP);
    rcpp_result_gen = Rcpp::wrap(fc_Lambda1lambda1(Vtilde, N, T, W2, secA1, secA2));
    return rcpp_result_gen;
END_RCPP
}
// fc_Sigmavarepsilonest
arma::mat fc_Sigmavarepsilonest(arma::mat Best, arma::vec Vtilde, int N, int T);
RcppExport SEXP _QuantileDSPM_fc_Sigmavarepsilonest(SEXP BestSEXP, SEXP VtildeSEXP, SEXP NSEXP, SEXP TSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type Best(BestSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type Vtilde(VtildeSEXP);
    Rcpp::traits::input_parameter< int >::type N(NSEXP);
    Rcpp::traits::input_parameter< int >::type T(TSEXP);
    rcpp_result_gen = Rcpp::wrap(fc_Sigmavarepsilonest(Best, Vtilde, N, T));
    return rcpp_result_gen;
END_RCPP
}
// fc_Sigmagest
arma::mat fc_Sigmagest(arma::mat Sigma_varepsilonest, arma::mat secA1, arma::mat secA2, int N);
RcppExport SEXP _QuantileDSPM_fc_Sigmagest(SEXP Sigma_varepsilonestSEXP, SEXP secA1SEXP, SEXP secA2SEXP, SEXP NSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type Sigma_varepsilonest(Sigma_varepsilonestSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type secA1(secA1SEXP);
    Rcpp::traits::input_parameter< arma::mat >::type secA2(secA2SEXP);
    Rcpp::traits::input_parameter< int >::type N(NSEXP);
    rcpp_result_gen = Rcpp::wrap(fc_Sigmagest(Sigma_varepsilonest, secA1, secA2, N));
    return rcpp_result_gen;
END_RCPP
}
// fc_kappacheck
arma::vec fc_kappacheck(arma::mat Lambda1, arma::vec lambda1);
RcppExport SEXP _QuantileDSPM_fc_kappacheck(SEXP Lambda1SEXP, SEXP lambda1SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type Lambda1(Lambda1SEXP);
    Rcpp::traits::input_parameter< arma::vec >::type lambda1(lambda1SEXP);
    rcpp_result_gen = Rcpp::wrap(fc_kappacheck(Lambda1, lambda1));
    return rcpp_result_gen;
END_RCPP
}
// fc_phihat
arma::vec fc_phihat(arma::vec etatilde, arma::mat Bhat, arma::mat Sigma_varepsilonhat, int N, int T, arma::vec Y, arma::mat Zbreve);
RcppExport SEXP _QuantileDSPM_fc_phihat(SEXP etatildeSEXP, SEXP BhatSEXP, SEXP Sigma_varepsilonhatSEXP, SEXP NSEXP, SEXP TSEXP, SEXP YSEXP, SEXP ZbreveSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type etatilde(etatildeSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Bhat(BhatSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Sigma_varepsilonhat(Sigma_varepsilonhatSEXP);
    Rcpp::traits::input_parameter< int >::type N(NSEXP);
    Rcpp::traits::input_parameter< int >::type T(TSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type Y(YSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Zbreve(ZbreveSEXP);
    rcpp_result_gen = Rcpp::wrap(fc_phihat(etatilde, Bhat, Sigma_varepsilonhat, N, T, Y, Zbreve));
    return rcpp_result_gen;
END_RCPP
}
// IQR_rcpp
double IQR_rcpp(arma::vec x);
RcppExport SEXP _QuantileDSPM_IQR_rcpp(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(IQR_rcpp(x));
    return rcpp_result_gen;
END_RCPP
}
// dnorm_rcpp
double dnorm_rcpp(double x);
RcppExport SEXP _QuantileDSPM_dnorm_rcpp(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(dnorm_rcpp(x));
    return rcpp_result_gen;
END_RCPP
}
// fc_Xihattauseq
arma::vec fc_Xihattauseq(arma::vec tauseq, int N, arma::vec thetahat, arma::mat Xwith1, arma::mat varphihat);
RcppExport SEXP _QuantileDSPM_fc_Xihattauseq(SEXP tauseqSEXP, SEXP NSEXP, SEXP thetahatSEXP, SEXP Xwith1SEXP, SEXP varphihatSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type tauseq(tauseqSEXP);
    Rcpp::traits::input_parameter< int >::type N(NSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type thetahat(thetahatSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Xwith1(Xwith1SEXP);
    Rcpp::traits::input_parameter< arma::mat >::type varphihat(varphihatSEXP);
    rcpp_result_gen = Rcpp::wrap(fc_Xihattauseq(tauseq, N, thetahat, Xwith1, varphihat));
    return rcpp_result_gen;
END_RCPP
}
// fc_ASDvarphihat
arma::mat fc_ASDvarphihat(arma::vec tauseq, int N, int p, arma::vec thetahat, arma::mat X, arma::mat varphihat);
RcppExport SEXP _QuantileDSPM_fc_ASDvarphihat(SEXP tauseqSEXP, SEXP NSEXP, SEXP pSEXP, SEXP thetahatSEXP, SEXP XSEXP, SEXP varphihatSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type tauseq(tauseqSEXP);
    Rcpp::traits::input_parameter< int >::type N(NSEXP);
    Rcpp::traits::input_parameter< int >::type p(pSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type thetahat(thetahatSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type varphihat(varphihatSEXP);
    rcpp_result_gen = Rcpp::wrap(fc_ASDvarphihat(tauseq, N, p, thetahat, X, varphihat));
    return rcpp_result_gen;
END_RCPP
}
// f_Ystarmat_Generation_TS
arma::mat f_Ystarmat_Generation_TS(int N, int T, int q, arma::vec y0, double rhohat, arma::vec phihat, arma::vec thetahat, arma::vec varepsilonstar, arma::cube Zarray, arma::mat W1, arma::mat W2);
RcppExport SEXP _QuantileDSPM_f_Ystarmat_Generation_TS(SEXP NSEXP, SEXP TSEXP, SEXP qSEXP, SEXP y0SEXP, SEXP rhohatSEXP, SEXP phihatSEXP, SEXP thetahatSEXP, SEXP varepsilonstarSEXP, SEXP ZarraySEXP, SEXP W1SEXP, SEXP W2SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type N(NSEXP);
    Rcpp::traits::input_parameter< int >::type T(TSEXP);
    Rcpp::traits::input_parameter< int >::type q(qSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type y0(y0SEXP);
    Rcpp::traits::input_parameter< double >::type rhohat(rhohatSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type phihat(phihatSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type thetahat(thetahatSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type varepsilonstar(varepsilonstarSEXP);
    Rcpp::traits::input_parameter< arma::cube >::type Zarray(ZarraySEXP);
    Rcpp::traits::input_parameter< arma::mat >::type W1(W1SEXP);
    Rcpp::traits::input_parameter< arma::mat >::type W2(W2SEXP);
    rcpp_result_gen = Rcpp::wrap(f_Ystarmat_Generation_TS(N, T, q, y0, rhohat, phihat, thetahat, varepsilonstar, Zarray, W1, W2));
    return rcpp_result_gen;
END_RCPP
}
// fc_varepsilonstar_TS
arma::vec fc_varepsilonstar_TS(arma::vec estar, int N, int T, arma::mat Bhat, arma::vec etahat);
RcppExport SEXP _QuantileDSPM_fc_varepsilonstar_TS(SEXP estarSEXP, SEXP NSEXP, SEXP TSEXP, SEXP BhatSEXP, SEXP etahatSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type estar(estarSEXP);
    Rcpp::traits::input_parameter< int >::type N(NSEXP);
    Rcpp::traits::input_parameter< int >::type T(TSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Bhat(BhatSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type etahat(etahatSEXP);
    rcpp_result_gen = Rcpp::wrap(fc_varepsilonstar_TS(estar, N, T, Bhat, etahat));
    return rcpp_result_gen;
END_RCPP
}
// noZ_fc_estbth_2SLS_TS
arma::vec noZ_fc_estbth_2SLS_TS(int Me, int Mpi, arma::vec tauseq, int N, int T, int q, int p, arma::vec y0, arma::mat X, arma::mat W1, arma::mat W2, arma::mat secA1, arma::mat secA2, arma::vec rhoest_hc, arma::cube Best_hc, arma::mat phiest_hc, arma::mat etaest_hc, arma::mat thetaest_hc, double rho_ini);
RcppExport SEXP _QuantileDSPM_noZ_fc_estbth_2SLS_TS(SEXP MeSEXP, SEXP MpiSEXP, SEXP tauseqSEXP, SEXP NSEXP, SEXP TSEXP, SEXP qSEXP, SEXP pSEXP, SEXP y0SEXP, SEXP XSEXP, SEXP W1SEXP, SEXP W2SEXP, SEXP secA1SEXP, SEXP secA2SEXP, SEXP rhoest_hcSEXP, SEXP Best_hcSEXP, SEXP phiest_hcSEXP, SEXP etaest_hcSEXP, SEXP thetaest_hcSEXP, SEXP rho_iniSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type Me(MeSEXP);
    Rcpp::traits::input_parameter< int >::type Mpi(MpiSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type tauseq(tauseqSEXP);
    Rcpp::traits::input_parameter< int >::type N(NSEXP);
    Rcpp::traits::input_parameter< int >::type T(TSEXP);
    Rcpp::traits::input_parameter< int >::type q(qSEXP);
    Rcpp::traits::input_parameter< int >::type p(pSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type y0(y0SEXP);
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type W1(W1SEXP);
    Rcpp::traits::input_parameter< arma::mat >::type W2(W2SEXP);
    Rcpp::traits::input_parameter< arma::mat >::type secA1(secA1SEXP);
    Rcpp::traits::input_parameter< arma::mat >::type secA2(secA2SEXP);
    Rcpp::traits::input_parameter< arma::vec >::type rhoest_hc(rhoest_hcSEXP);
    Rcpp::traits::input_parameter< arma::cube >::type Best_hc(Best_hcSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type phiest_hc(phiest_hcSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type etaest_hc(etaest_hcSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type thetaest_hc(thetaest_hcSEXP);
    Rcpp::traits::input_parameter< double >::type rho_ini(rho_iniSEXP);
    rcpp_result_gen = Rcpp::wrap(noZ_fc_estbth_2SLS_TS(Me, Mpi, tauseq, N, T, q, p, y0, X, W1, W2, secA1, secA2, rhoest_hc, Best_hc, phiest_hc, etaest_hc, thetaest_hc, rho_ini));
    return rcpp_result_gen;
END_RCPP
}
// noZ_fc_estBnum_2SLS_TS
arma::mat noZ_fc_estBnum_2SLS_TS(int Bnum, int dimALL, int Me, int Mpi, arma::vec tauseq, int N, int T, int q, int p, arma::vec y0, arma::mat X, arma::mat W1, arma::mat W2, arma::mat secA1, arma::mat secA2, arma::vec rhoest_hc, arma::cube Best_hc, arma::mat phiest_hc, arma::mat etaest_hc, arma::mat thetaest_hc, double rho_ini);
RcppExport SEXP _QuantileDSPM_noZ_fc_estBnum_2SLS_TS(SEXP BnumSEXP, SEXP dimALLSEXP, SEXP MeSEXP, SEXP MpiSEXP, SEXP tauseqSEXP, SEXP NSEXP, SEXP TSEXP, SEXP qSEXP, SEXP pSEXP, SEXP y0SEXP, SEXP XSEXP, SEXP W1SEXP, SEXP W2SEXP, SEXP secA1SEXP, SEXP secA2SEXP, SEXP rhoest_hcSEXP, SEXP Best_hcSEXP, SEXP phiest_hcSEXP, SEXP etaest_hcSEXP, SEXP thetaest_hcSEXP, SEXP rho_iniSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type Bnum(BnumSEXP);
    Rcpp::traits::input_parameter< int >::type dimALL(dimALLSEXP);
    Rcpp::traits::input_parameter< int >::type Me(MeSEXP);
    Rcpp::traits::input_parameter< int >::type Mpi(MpiSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type tauseq(tauseqSEXP);
    Rcpp::traits::input_parameter< int >::type N(NSEXP);
    Rcpp::traits::input_parameter< int >::type T(TSEXP);
    Rcpp::traits::input_parameter< int >::type q(qSEXP);
    Rcpp::traits::input_parameter< int >::type p(pSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type y0(y0SEXP);
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type W1(W1SEXP);
    Rcpp::traits::input_parameter< arma::mat >::type W2(W2SEXP);
    Rcpp::traits::input_parameter< arma::mat >::type secA1(secA1SEXP);
    Rcpp::traits::input_parameter< arma::mat >::type secA2(secA2SEXP);
    Rcpp::traits::input_parameter< arma::vec >::type rhoest_hc(rhoest_hcSEXP);
    Rcpp::traits::input_parameter< arma::cube >::type Best_hc(Best_hcSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type phiest_hc(phiest_hcSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type etaest_hc(etaest_hcSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type thetaest_hc(thetaest_hcSEXP);
    Rcpp::traits::input_parameter< double >::type rho_ini(rho_iniSEXP);
    rcpp_result_gen = Rcpp::wrap(noZ_fc_estBnum_2SLS_TS(Bnum, dimALL, Me, Mpi, tauseq, N, T, q, p, y0, X, W1, W2, secA1, secA2, rhoest_hc, Best_hc, phiest_hc, etaest_hc, thetaest_hc, rho_ini));
    return rcpp_result_gen;
END_RCPP
}
// noZ_fc_asmat
arma::mat noZ_fc_asmat(arma::vec vec1, int nrow, int ncol);
RcppExport SEXP _QuantileDSPM_noZ_fc_asmat(SEXP vec1SEXP, SEXP nrowSEXP, SEXP ncolSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type vec1(vec1SEXP);
    Rcpp::traits::input_parameter< int >::type nrow(nrowSEXP);
    Rcpp::traits::input_parameter< int >::type ncol(ncolSEXP);
    rcpp_result_gen = Rcpp::wrap(noZ_fc_asmat(vec1, nrow, ncol));
    return rcpp_result_gen;
END_RCPP
}
// noZ_fc_asvec
arma::vec noZ_fc_asvec(arma::mat mat1);
RcppExport SEXP _QuantileDSPM_noZ_fc_asvec(SEXP mat1SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type mat1(mat1SEXP);
    rcpp_result_gen = Rcpp::wrap(noZ_fc_asvec(mat1));
    return rcpp_result_gen;
END_RCPP
}
// noZ_fc_iota
arma::mat noZ_fc_iota(int n);
RcppExport SEXP _QuantileDSPM_noZ_fc_iota(SEXP nSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    rcpp_result_gen = Rcpp::wrap(noZ_fc_iota(n));
    return rcpp_result_gen;
END_RCPP
}
// noZ_fc_I
arma::mat noZ_fc_I(int n);
RcppExport SEXP _QuantileDSPM_noZ_fc_I(SEXP nSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    rcpp_result_gen = Rcpp::wrap(noZ_fc_I(n));
    return rcpp_result_gen;
END_RCPP
}
// noZ_fc_B
arma::mat noZ_fc_B(double rho, int N, arma::mat W2);
RcppExport SEXP _QuantileDSPM_noZ_fc_B(SEXP rhoSEXP, SEXP NSEXP, SEXP W2SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type rho(rhoSEXP);
    Rcpp::traits::input_parameter< int >::type N(NSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type W2(W2SEXP);
    rcpp_result_gen = Rcpp::wrap(noZ_fc_B(rho, N, W2));
    return rcpp_result_gen;
END_RCPP
}
// noZ_fc_MatrixMultip
arma::mat noZ_fc_MatrixMultip(arma::mat M1, arma::mat M2);
RcppExport SEXP _QuantileDSPM_noZ_fc_MatrixMultip(SEXP M1SEXP, SEXP M2SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type M1(M1SEXP);
    Rcpp::traits::input_parameter< arma::mat >::type M2(M2SEXP);
    rcpp_result_gen = Rcpp::wrap(noZ_fc_MatrixMultip(M1, M2));
    return rcpp_result_gen;
END_RCPP
}
// noZ_fc_phitilde_2SLS
arma::vec noZ_fc_phitilde_2SLS(arma::vec wrD, arma::mat wrH, arma::mat wrH_pred);
RcppExport SEXP _QuantileDSPM_noZ_fc_phitilde_2SLS(SEXP wrDSEXP, SEXP wrHSEXP, SEXP wrH_predSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type wrD(wrDSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type wrH(wrHSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type wrH_pred(wrH_predSEXP);
    rcpp_result_gen = Rcpp::wrap(noZ_fc_phitilde_2SLS(wrD, wrH, wrH_pred));
    return rcpp_result_gen;
END_RCPP
}
// noZ_fc_etaest
arma::vec noZ_fc_etaest(arma::vec phiest, arma::vec Y, arma::mat Zbreve);
RcppExport SEXP _QuantileDSPM_noZ_fc_etaest(SEXP phiestSEXP, SEXP YSEXP, SEXP ZbreveSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type phiest(phiestSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type Y(YSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Zbreve(ZbreveSEXP);
    rcpp_result_gen = Rcpp::wrap(noZ_fc_etaest(phiest, Y, Zbreve));
    return rcpp_result_gen;
END_RCPP
}
// noZ_fc_Vtilde
arma::vec noZ_fc_Vtilde(arma::vec etatilde, int N, int T);
RcppExport SEXP _QuantileDSPM_noZ_fc_Vtilde(SEXP etatildeSEXP, SEXP NSEXP, SEXP TSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type etatilde(etatildeSEXP);
    Rcpp::traits::input_parameter< int >::type N(NSEXP);
    Rcpp::traits::input_parameter< int >::type T(TSEXP);
    rcpp_result_gen = Rcpp::wrap(noZ_fc_Vtilde(etatilde, N, T));
    return rcpp_result_gen;
END_RCPP
}
// noZ_fc_secA1
arma::mat noZ_fc_secA1(arma::mat W2, int N);
RcppExport SEXP _QuantileDSPM_noZ_fc_secA1(SEXP W2SEXP, SEXP NSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type W2(W2SEXP);
    Rcpp::traits::input_parameter< int >::type N(NSEXP);
    rcpp_result_gen = Rcpp::wrap(noZ_fc_secA1(W2, N));
    return rcpp_result_gen;
END_RCPP
}
// noZ_fc_Lambda1lambda1
arma::mat noZ_fc_Lambda1lambda1(arma::vec Vtilde, int N, int T, arma::mat W2, arma::mat secA1, arma::mat secA2);
RcppExport SEXP _QuantileDSPM_noZ_fc_Lambda1lambda1(SEXP VtildeSEXP, SEXP NSEXP, SEXP TSEXP, SEXP W2SEXP, SEXP secA1SEXP, SEXP secA2SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type Vtilde(VtildeSEXP);
    Rcpp::traits::input_parameter< int >::type N(NSEXP);
    Rcpp::traits::input_parameter< int >::type T(TSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type W2(W2SEXP);
    Rcpp::traits::input_parameter< arma::mat >::type secA1(secA1SEXP);
    Rcpp::traits::input_parameter< arma::mat >::type secA2(secA2SEXP);
    rcpp_result_gen = Rcpp::wrap(noZ_fc_Lambda1lambda1(Vtilde, N, T, W2, secA1, secA2));
    return rcpp_result_gen;
END_RCPP
}
// noZ_fc_Sigmavarepsilonest
arma::mat noZ_fc_Sigmavarepsilonest(arma::mat Best, arma::vec Vtilde, int N, int T);
RcppExport SEXP _QuantileDSPM_noZ_fc_Sigmavarepsilonest(SEXP BestSEXP, SEXP VtildeSEXP, SEXP NSEXP, SEXP TSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type Best(BestSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type Vtilde(VtildeSEXP);
    Rcpp::traits::input_parameter< int >::type N(NSEXP);
    Rcpp::traits::input_parameter< int >::type T(TSEXP);
    rcpp_result_gen = Rcpp::wrap(noZ_fc_Sigmavarepsilonest(Best, Vtilde, N, T));
    return rcpp_result_gen;
END_RCPP
}
// noZ_fc_Sigmagest
arma::mat noZ_fc_Sigmagest(arma::mat Sigma_varepsilonest, arma::mat secA1, arma::mat secA2, int N);
RcppExport SEXP _QuantileDSPM_noZ_fc_Sigmagest(SEXP Sigma_varepsilonestSEXP, SEXP secA1SEXP, SEXP secA2SEXP, SEXP NSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type Sigma_varepsilonest(Sigma_varepsilonestSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type secA1(secA1SEXP);
    Rcpp::traits::input_parameter< arma::mat >::type secA2(secA2SEXP);
    Rcpp::traits::input_parameter< int >::type N(NSEXP);
    rcpp_result_gen = Rcpp::wrap(noZ_fc_Sigmagest(Sigma_varepsilonest, secA1, secA2, N));
    return rcpp_result_gen;
END_RCPP
}
// noZ_fc_kappacheck
arma::vec noZ_fc_kappacheck(arma::mat Lambda1, arma::vec lambda1);
RcppExport SEXP _QuantileDSPM_noZ_fc_kappacheck(SEXP Lambda1SEXP, SEXP lambda1SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type Lambda1(Lambda1SEXP);
    Rcpp::traits::input_parameter< arma::vec >::type lambda1(lambda1SEXP);
    rcpp_result_gen = Rcpp::wrap(noZ_fc_kappacheck(Lambda1, lambda1));
    return rcpp_result_gen;
END_RCPP
}
// noZ_fc_phihat
arma::vec noZ_fc_phihat(arma::vec etatilde, arma::mat Bhat, arma::mat Sigma_varepsilonhat, int N, int T, arma::vec Y, arma::mat Zbreve);
RcppExport SEXP _QuantileDSPM_noZ_fc_phihat(SEXP etatildeSEXP, SEXP BhatSEXP, SEXP Sigma_varepsilonhatSEXP, SEXP NSEXP, SEXP TSEXP, SEXP YSEXP, SEXP ZbreveSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type etatilde(etatildeSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Bhat(BhatSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Sigma_varepsilonhat(Sigma_varepsilonhatSEXP);
    Rcpp::traits::input_parameter< int >::type N(NSEXP);
    Rcpp::traits::input_parameter< int >::type T(TSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type Y(YSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Zbreve(ZbreveSEXP);
    rcpp_result_gen = Rcpp::wrap(noZ_fc_phihat(etatilde, Bhat, Sigma_varepsilonhat, N, T, Y, Zbreve));
    return rcpp_result_gen;
END_RCPP
}
// noZ_IQR_rcpp
double noZ_IQR_rcpp(arma::vec x);
RcppExport SEXP _QuantileDSPM_noZ_IQR_rcpp(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(noZ_IQR_rcpp(x));
    return rcpp_result_gen;
END_RCPP
}
// noZ_dnorm_rcpp
double noZ_dnorm_rcpp(double x);
RcppExport SEXP _QuantileDSPM_noZ_dnorm_rcpp(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(noZ_dnorm_rcpp(x));
    return rcpp_result_gen;
END_RCPP
}
// noZ_fc_Xihattauseq
arma::vec noZ_fc_Xihattauseq(arma::vec tauseq, int N, arma::vec thetahat, arma::mat Xwith1, arma::mat varphihat);
RcppExport SEXP _QuantileDSPM_noZ_fc_Xihattauseq(SEXP tauseqSEXP, SEXP NSEXP, SEXP thetahatSEXP, SEXP Xwith1SEXP, SEXP varphihatSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type tauseq(tauseqSEXP);
    Rcpp::traits::input_parameter< int >::type N(NSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type thetahat(thetahatSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Xwith1(Xwith1SEXP);
    Rcpp::traits::input_parameter< arma::mat >::type varphihat(varphihatSEXP);
    rcpp_result_gen = Rcpp::wrap(noZ_fc_Xihattauseq(tauseq, N, thetahat, Xwith1, varphihat));
    return rcpp_result_gen;
END_RCPP
}
// noZ_fc_ASDvarphihat
arma::mat noZ_fc_ASDvarphihat(arma::vec tauseq, int N, int p, arma::vec thetahat, arma::mat X, arma::mat varphihat);
RcppExport SEXP _QuantileDSPM_noZ_fc_ASDvarphihat(SEXP tauseqSEXP, SEXP NSEXP, SEXP pSEXP, SEXP thetahatSEXP, SEXP XSEXP, SEXP varphihatSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type tauseq(tauseqSEXP);
    Rcpp::traits::input_parameter< int >::type N(NSEXP);
    Rcpp::traits::input_parameter< int >::type p(pSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type thetahat(thetahatSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type varphihat(varphihatSEXP);
    rcpp_result_gen = Rcpp::wrap(noZ_fc_ASDvarphihat(tauseq, N, p, thetahat, X, varphihat));
    return rcpp_result_gen;
END_RCPP
}
// noZ_f_Ystarmat_Generation_TS
arma::mat noZ_f_Ystarmat_Generation_TS(int N, int T, int q, arma::vec y0, double rhohat, arma::vec phihat, arma::vec thetahat, arma::vec varepsilonstar, arma::mat W1, arma::mat W2);
RcppExport SEXP _QuantileDSPM_noZ_f_Ystarmat_Generation_TS(SEXP NSEXP, SEXP TSEXP, SEXP qSEXP, SEXP y0SEXP, SEXP rhohatSEXP, SEXP phihatSEXP, SEXP thetahatSEXP, SEXP varepsilonstarSEXP, SEXP W1SEXP, SEXP W2SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type N(NSEXP);
    Rcpp::traits::input_parameter< int >::type T(TSEXP);
    Rcpp::traits::input_parameter< int >::type q(qSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type y0(y0SEXP);
    Rcpp::traits::input_parameter< double >::type rhohat(rhohatSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type phihat(phihatSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type thetahat(thetahatSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type varepsilonstar(varepsilonstarSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type W1(W1SEXP);
    Rcpp::traits::input_parameter< arma::mat >::type W2(W2SEXP);
    rcpp_result_gen = Rcpp::wrap(noZ_f_Ystarmat_Generation_TS(N, T, q, y0, rhohat, phihat, thetahat, varepsilonstar, W1, W2));
    return rcpp_result_gen;
END_RCPP
}
// noZ_fc_varepsilonstar_TS
arma::vec noZ_fc_varepsilonstar_TS(arma::vec estar, int N, int T, arma::mat Bhat, arma::vec etahat);
RcppExport SEXP _QuantileDSPM_noZ_fc_varepsilonstar_TS(SEXP estarSEXP, SEXP NSEXP, SEXP TSEXP, SEXP BhatSEXP, SEXP etahatSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type estar(estarSEXP);
    Rcpp::traits::input_parameter< int >::type N(NSEXP);
    Rcpp::traits::input_parameter< int >::type T(TSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Bhat(BhatSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type etahat(etahatSEXP);
    rcpp_result_gen = Rcpp::wrap(noZ_fc_varepsilonstar_TS(estar, N, T, Bhat, etahat));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_QuantileDSPM_fc_estbth_2SLS_TS", (DL_FUNC) &_QuantileDSPM_fc_estbth_2SLS_TS, 20},
    {"_QuantileDSPM_fc_estBnum_2SLS_TS", (DL_FUNC) &_QuantileDSPM_fc_estBnum_2SLS_TS, 22},
    {"_QuantileDSPM_fc_asmat", (DL_FUNC) &_QuantileDSPM_fc_asmat, 3},
    {"_QuantileDSPM_fc_asvec", (DL_FUNC) &_QuantileDSPM_fc_asvec, 1},
    {"_QuantileDSPM_fc_iota", (DL_FUNC) &_QuantileDSPM_fc_iota, 1},
    {"_QuantileDSPM_fc_I", (DL_FUNC) &_QuantileDSPM_fc_I, 1},
    {"_QuantileDSPM_fc_B", (DL_FUNC) &_QuantileDSPM_fc_B, 3},
    {"_QuantileDSPM_fc_MatrixMultip", (DL_FUNC) &_QuantileDSPM_fc_MatrixMultip, 2},
    {"_QuantileDSPM_fc_phitilde_2SLS", (DL_FUNC) &_QuantileDSPM_fc_phitilde_2SLS, 3},
    {"_QuantileDSPM_fc_etaest", (DL_FUNC) &_QuantileDSPM_fc_etaest, 3},
    {"_QuantileDSPM_fc_Vtilde", (DL_FUNC) &_QuantileDSPM_fc_Vtilde, 3},
    {"_QuantileDSPM_fc_secA1", (DL_FUNC) &_QuantileDSPM_fc_secA1, 2},
    {"_QuantileDSPM_fc_Lambda1lambda1", (DL_FUNC) &_QuantileDSPM_fc_Lambda1lambda1, 6},
    {"_QuantileDSPM_fc_Sigmavarepsilonest", (DL_FUNC) &_QuantileDSPM_fc_Sigmavarepsilonest, 4},
    {"_QuantileDSPM_fc_Sigmagest", (DL_FUNC) &_QuantileDSPM_fc_Sigmagest, 4},
    {"_QuantileDSPM_fc_kappacheck", (DL_FUNC) &_QuantileDSPM_fc_kappacheck, 2},
    {"_QuantileDSPM_fc_phihat", (DL_FUNC) &_QuantileDSPM_fc_phihat, 7},
    {"_QuantileDSPM_IQR_rcpp", (DL_FUNC) &_QuantileDSPM_IQR_rcpp, 1},
    {"_QuantileDSPM_dnorm_rcpp", (DL_FUNC) &_QuantileDSPM_dnorm_rcpp, 1},
    {"_QuantileDSPM_fc_Xihattauseq", (DL_FUNC) &_QuantileDSPM_fc_Xihattauseq, 5},
    {"_QuantileDSPM_fc_ASDvarphihat", (DL_FUNC) &_QuantileDSPM_fc_ASDvarphihat, 6},
    {"_QuantileDSPM_f_Ystarmat_Generation_TS", (DL_FUNC) &_QuantileDSPM_f_Ystarmat_Generation_TS, 11},
    {"_QuantileDSPM_fc_varepsilonstar_TS", (DL_FUNC) &_QuantileDSPM_fc_varepsilonstar_TS, 5},
    {"_QuantileDSPM_noZ_fc_estbth_2SLS_TS", (DL_FUNC) &_QuantileDSPM_noZ_fc_estbth_2SLS_TS, 19},
    {"_QuantileDSPM_noZ_fc_estBnum_2SLS_TS", (DL_FUNC) &_QuantileDSPM_noZ_fc_estBnum_2SLS_TS, 21},
    {"_QuantileDSPM_noZ_fc_asmat", (DL_FUNC) &_QuantileDSPM_noZ_fc_asmat, 3},
    {"_QuantileDSPM_noZ_fc_asvec", (DL_FUNC) &_QuantileDSPM_noZ_fc_asvec, 1},
    {"_QuantileDSPM_noZ_fc_iota", (DL_FUNC) &_QuantileDSPM_noZ_fc_iota, 1},
    {"_QuantileDSPM_noZ_fc_I", (DL_FUNC) &_QuantileDSPM_noZ_fc_I, 1},
    {"_QuantileDSPM_noZ_fc_B", (DL_FUNC) &_QuantileDSPM_noZ_fc_B, 3},
    {"_QuantileDSPM_noZ_fc_MatrixMultip", (DL_FUNC) &_QuantileDSPM_noZ_fc_MatrixMultip, 2},
    {"_QuantileDSPM_noZ_fc_phitilde_2SLS", (DL_FUNC) &_QuantileDSPM_noZ_fc_phitilde_2SLS, 3},
    {"_QuantileDSPM_noZ_fc_etaest", (DL_FUNC) &_QuantileDSPM_noZ_fc_etaest, 3},
    {"_QuantileDSPM_noZ_fc_Vtilde", (DL_FUNC) &_QuantileDSPM_noZ_fc_Vtilde, 3},
    {"_QuantileDSPM_noZ_fc_secA1", (DL_FUNC) &_QuantileDSPM_noZ_fc_secA1, 2},
    {"_QuantileDSPM_noZ_fc_Lambda1lambda1", (DL_FUNC) &_QuantileDSPM_noZ_fc_Lambda1lambda1, 6},
    {"_QuantileDSPM_noZ_fc_Sigmavarepsilonest", (DL_FUNC) &_QuantileDSPM_noZ_fc_Sigmavarepsilonest, 4},
    {"_QuantileDSPM_noZ_fc_Sigmagest", (DL_FUNC) &_QuantileDSPM_noZ_fc_Sigmagest, 4},
    {"_QuantileDSPM_noZ_fc_kappacheck", (DL_FUNC) &_QuantileDSPM_noZ_fc_kappacheck, 2},
    {"_QuantileDSPM_noZ_fc_phihat", (DL_FUNC) &_QuantileDSPM_noZ_fc_phihat, 7},
    {"_QuantileDSPM_noZ_IQR_rcpp", (DL_FUNC) &_QuantileDSPM_noZ_IQR_rcpp, 1},
    {"_QuantileDSPM_noZ_dnorm_rcpp", (DL_FUNC) &_QuantileDSPM_noZ_dnorm_rcpp, 1},
    {"_QuantileDSPM_noZ_fc_Xihattauseq", (DL_FUNC) &_QuantileDSPM_noZ_fc_Xihattauseq, 5},
    {"_QuantileDSPM_noZ_fc_ASDvarphihat", (DL_FUNC) &_QuantileDSPM_noZ_fc_ASDvarphihat, 6},
    {"_QuantileDSPM_noZ_f_Ystarmat_Generation_TS", (DL_FUNC) &_QuantileDSPM_noZ_f_Ystarmat_Generation_TS, 10},
    {"_QuantileDSPM_noZ_fc_varepsilonstar_TS", (DL_FUNC) &_QuantileDSPM_noZ_fc_varepsilonstar_TS, 5},
    {NULL, NULL, 0}
};

RcppExport void R_init_QuantileDSPM(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
